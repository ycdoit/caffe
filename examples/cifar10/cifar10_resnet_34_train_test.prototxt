name: "CIFAR10_Resnet-34"
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "examples/cifar10/cifar10_train_lmdb"
    batch_size: 128
    backend: LMDB
  }
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "examples/cifar10/cifar10_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}

layer {
	bottom: "data"
	top: "conv1"
	name: "conv1"
	type: "Convolution"
    convolution_param {
        num_output: 16        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "conv1"
	top: "conv1"
	name: "bn_conv1"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "conv1"
	top: "conv1"
	name: "scale_conv1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "conv1"
	top: "conv1"
	name: "conv1_relu"
	type: "ReLU"
}

layer {
	bottom: "conv1"
	top: "res2a_branch2a"
	name: "res2a_branch2a"
	type: "Convolution"
    convolution_param {
        num_output: 16        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res2a_branch2a"
	top: "res2a_branch2a"
	name: "bn2a_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res2a_branch2a"
	top: "res2a_branch2a"
	name: "scale2a_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2a_branch2a"
	top: "res2a_branch2a"
	name: "res2a_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res2a_branch2a"
	top: "res2a_branch2b"
	name: "res2a_branch2b"
	type: "Convolution"
    convolution_param {
        num_output: 16        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res2a_branch2b"
	top: "res2a_branch2b"
	name: "bn2a_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res2a_branch2b"
	top: "res2a_branch2b"
	name: "scale2a_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}


layer {
	bottom: "conv1"
	bottom: "res2a_branch2b"
	top: "res2a"
	name: "res2a"
	type: "Eltwise"
}

layer {
	bottom: "res2a"
	top: "res2a"
	name: "res2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res2a"
	top: "res2b_branch2a"
	name: "res2b_branch2a"
	type: "Convolution"
    convolution_param {
        num_output: 16        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res2b_branch2a"
	top: "res2b_branch2a"
	name: "bn2b_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res2b_branch2a"
	top: "res2b_branch2a"
	name: "scale2b_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2b_branch2a"
	top: "res2b_branch2a"
	name: "res2b_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res2b_branch2a"
	top: "res2b_branch2b"
	name: "res2b_branch2b"
	type: "Convolution"
    convolution_param {
        num_output: 16        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res2b_branch2b"
	top: "res2b_branch2b"
	name: "bn2b_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res2b_branch2b"
	top: "res2b_branch2b"
	name: "scale2b_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2a"
	bottom: "res2b_branch2b"
	top: "res2b"
	name: "res2b"
	type: "Eltwise"
}

layer {
	bottom: "res2b"
	top: "res2b"
	name: "res2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res2b"
	top: "res2c_branch2a"
	name: "res2c_branch2a"
	type: "Convolution"
    convolution_param {
        num_output: 16        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res2c_branch2a"
	top: "res2c_branch2a"
	name: "bn2c_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res2c_branch2a"
	top: "res2c_branch2a"
	name: "scale2c_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2c_branch2a"
	top: "res2c_branch2a"
	name: "res2c_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res2c_branch2a"
	top: "res2c_branch2b"
	name: "res2c_branch2b"
	type: "Convolution"
    convolution_param {
        num_output: 16        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res2c_branch2b"
	top: "res2c_branch2b"
	name: "bn2c_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res2c_branch2b"
	top: "res2c_branch2b"
	name: "scale2c_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2b"
	bottom: "res2c_branch2b"
	top: "res2c"
	name: "res2c"
	type: "Eltwise"
}

layer {
	bottom: "res2c"
	top: "res2c"
	name: "res2c_relu"
	type: "ReLU"
}


layer {
	bottom: "res2c"
	top: "res2d_branch2a"
	name: "res2d_branch2a"
	type: "Convolution"
    convolution_param {
        num_output: 16        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res2d_branch2a"
	top: "res2d_branch2a"
	name: "bn2d_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res2d_branch2a"
	top: "res2d_branch2a"
	name: "scale2d_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2d_branch2a"
	top: "res2d_branch2a"
	name: "res2d_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res2d_branch2a"
	top: "res2d_branch2b"
	name: "res2d_branch2b"
	type: "Convolution"
    convolution_param {
        num_output: 16        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res2d_branch2b"
	top: "res2d_branch2b"
	name: "bn2d_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res2d_branch2b"
	top: "res2d_branch2b"
	name: "scale2d_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2c"
	bottom: "res2d_branch2b"
	top: "res2d"
	name: "res2d"
	type: "Eltwise"
}

layer {
	bottom: "res2d"
	top: "res2d"
	name: "res2d_relu"
	type: "ReLU"
}


layer {
	bottom: "res2d"
	top: "res2e_branch2a"
	name: "res2e_branch2a"
	type: "Convolution"
    convolution_param {
        num_output: 16        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res2e_branch2a"
	top: "res2e_branch2a"
	name: "bn2e_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res2e_branch2a"
	top: "res2e_branch2a"
	name: "scale2e_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2e_branch2a"
	top: "res2e_branch2a"
	name: "res2e_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res2e_branch2a"
	top: "res2e_branch2b"
	name: "res2e_branch2b"
	type: "Convolution"
    convolution_param {
        num_output: 16        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res2e_branch2b"
	top: "res2e_branch2b"
	name: "bn2e_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res2e_branch2b"
	top: "res2e_branch2b"
	name: "scale2e_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2d"
	bottom: "res2e_branch2b"
	top: "res2e"
	name: "res2e"
	type: "Eltwise"
}

layer {
	bottom: "res2e"
	top: "res2e"
	name: "res2e_relu"
	type: "ReLU"
}

layer {
	bottom: "res2e"
	top: "res3a_branch1"
	name: "res3a_branch1"
	type: "Convolution"
    convolution_param {
        num_output: 32        
        kernel_size: 1
        pad: 0
        stride: 2
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res3a_branch1"
	top: "res3a_branch1"
	name: "bn3a_branch1"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res3a_branch1"
	top: "res3a_branch1"
	name: "scale3a_branch1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2e"
	top: "res3a_branch2a"
	name: "res3a_branch2a"
	type: "Convolution"
    convolution_param {
        num_output: 32        
        kernel_size: 3
        pad: 1
        stride: 2
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res3a_branch2a"
	top: "res3a_branch2a"
	name: "bn3a_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res3a_branch2a"
	top: "res3a_branch2a"
	name: "scale3a_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3a_branch2a"
	top: "res3a_branch2a"
	name: "res3a_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res3a_branch2a"
	top: "res3a_branch2b"
	name: "res3a_branch2b"
	type: "Convolution"
    convolution_param {
        num_output: 32        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res3a_branch2b"
	top: "res3a_branch2b"
	name: "bn3a_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res3a_branch2b"
	top: "res3a_branch2b"
	name: "scale3a_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3a_branch1"
	bottom: "res3a_branch2b"
	top: "res3a"
	name: "res3a"
	type: "Eltwise"
}

layer {
	bottom: "res3a"
	top: "res3a"
	name: "res3a_relu"
	type: "ReLU"
}

layer {
	bottom: "res3a"
	top: "res3b_branch2a"
	name: "res3b_branch2a"
	type: "Convolution"
    convolution_param {
        num_output: 32        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res3b_branch2a"
	top: "res3b_branch2a"
	name: "bn3b_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res3b_branch2a"
	top: "res3b_branch2a"
	name: "scale3b_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3b_branch2a"
	top: "res3b_branch2a"
	name: "res3b_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res3b_branch2a"
	top: "res3b_branch2b"
	name: "res3b_branch2b"
	type: "Convolution"
    convolution_param {
        num_output: 32        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res3b_branch2b"
	top: "res3b_branch2b"
	name: "bn3b_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res3b_branch2b"
	top: "res3b_branch2b"
	name: "scale3b_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3a"
	bottom: "res3b_branch2b"
	top: "res3b"
	name: "res3b"
	type: "Eltwise"
}

layer {
	bottom: "res3b"
	top: "res3b"
	name: "res3b_relu"
	type: "ReLU"
}

layer {
	bottom: "res3b"
	top: "res3c_branch2a"
	name: "res3c_branch2a"
	type: "Convolution"
    convolution_param {
        num_output: 32        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res3c_branch2a"
	top: "res3c_branch2a"
	name: "bn3c_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res3c_branch2a"
	top: "res3c_branch2a"
	name: "scale3c_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3c_branch2a"
	top: "res3c_branch2a"
	name: "res3c_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res3c_branch2a"
	top: "res3c_branch2b"
	name: "res3c_branch2b"
	type: "Convolution"
    convolution_param {
        num_output: 32        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res3c_branch2b"
	top: "res3c_branch2b"
	name: "bn3c_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res3c_branch2b"
	top: "res3c_branch2b"
	name: "scale3c_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3b"
	bottom: "res3c_branch2b"
	top: "res3c"
	name: "res3c"
	type: "Eltwise"
}

layer {
	bottom: "res3c"
	top: "res3c"
	name: "res3c_relu"
	type: "ReLU"
}

layer {
	bottom: "res3c"
	top: "res3d_branch2a"
	name: "res3d_branch2a"
	type: "Convolution"
    convolution_param {
        num_output: 32        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res3d_branch2a"
	top: "res3d_branch2a"
	name: "bn3d_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res3d_branch2a"
	top: "res3d_branch2a"
	name: "scale3d_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3d_branch2a"
	top: "res3d_branch2a"
	name: "res3d_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res3d_branch2a"
	top: "res3d_branch2b"
	name: "res3d_branch2b"
	type: "Convolution"
    convolution_param {
        num_output: 32        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res3d_branch2b"
	top: "res3d_branch2b"
	name: "bn3d_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res3d_branch2b"
	top: "res3d_branch2b"
	name: "scale3d_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3c"
	bottom: "res3d_branch2b"
	top: "res3d"
	name: "res3d"
	type: "Eltwise"
}

layer {
	bottom: "res3d"
	top: "res3d"
	name: "res3d_relu"
	type: "ReLU"
}

layer {
	bottom: "res3d"
	top: "res3e_branch2a"
	name: "res3e_branch2a"
	type: "Convolution"
    convolution_param {
        num_output: 32        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res3e_branch2a"
	top: "res3e_branch2a"
	name: "bn3e_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res3e_branch2a"
	top: "res3e_branch2a"
	name: "scale3e_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3e_branch2a"
	top: "res3e_branch2a"
	name: "res3e_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res3e_branch2a"
	top: "res3e_branch2b"
	name: "res3e_branch2b"
	type: "Convolution"
    convolution_param {
        num_output: 32        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res3e_branch2b"
	top: "res3e_branch2b"
	name: "bn3e_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res3e_branch2b"
	top: "res3e_branch2b"
	name: "scale3e_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3d"
	bottom: "res3e_branch2b"
	top: "res3e"
	name: "res3e"
	type: "Eltwise"
}

layer {
	bottom: "res3e"
	top: "res3e"
	name: "res3e_relu"
	type: "ReLU"
}


layer {
	bottom: "res3e"
	top: "res4a_branch1"
	name: "res4a_branch1"
	type: "Convolution"
    convolution_param {
        num_output: 64        
        kernel_size: 1
        pad: 0
        stride: 2
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res4a_branch1"
	top: "res4a_branch1"
	name: "bn4a_branch1"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4a_branch1"
	top: "res4a_branch1"
	name: "scale4a_branch1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3e"
	top: "res4a_branch2a"
	name: "res4a_branch2a"
	type: "Convolution"
    convolution_param {
        num_output: 64        
        kernel_size: 3
        pad: 1
        stride: 2
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res4a_branch2a"
	top: "res4a_branch2a"
	name: "bn4a_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4a_branch2a"
	top: "res4a_branch2a"
	name: "scale4a_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4a_branch2a"
	top: "res4a_branch2a"
	name: "res4a_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res4a_branch2a"
	top: "res4a_branch2b"
	name: "res4a_branch2b"
	type: "Convolution"
    convolution_param {
        num_output: 64        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res4a_branch2b"
	top: "res4a_branch2b"
	name: "bn4a_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4a_branch2b"
	top: "res4a_branch2b"
	name: "scale4a_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4a_branch1"
	bottom: "res4a_branch2b"
	top: "res4a"
	name: "res4a"
	type: "Eltwise"
}

layer {
	bottom: "res4a"
	top: "res4a"
	name: "res4a_relu"
	type: "ReLU"
}

layer {
	bottom: "res4a"
	top: "res4b_branch2a"
	name: "res4b_branch2a"
	type: "Convolution"
    convolution_param {
        num_output: 64        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res4b_branch2a"
	top: "res4b_branch2a"
	name: "bn4b_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4b_branch2a"
	top: "res4b_branch2a"
	name: "scale4b_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4b_branch2a"
	top: "res4b_branch2a"
	name: "res4b_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res4b_branch2a"
	top: "res4b_branch2b"
	name: "res4b_branch2b"
	type: "Convolution"
    convolution_param {
        num_output: 64        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res4b_branch2b"
	top: "res4b_branch2b"
	name: "bn4b_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4b_branch2b"
	top: "res4b_branch2b"
	name: "scale4b_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4a"
	bottom: "res4b_branch2b"
	top: "res4b"
	name: "res4b"
	type: "Eltwise"
}

layer {
	bottom: "res4b"
	top: "res4b"
	name: "res4b_relu"
	type: "ReLU"
}

layer {
	bottom: "res4b"
	top: "res4c_branch2a"
	name: "res4c_branch2a"
	type: "Convolution"
    convolution_param {
        num_output: 64        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res4c_branch2a"
	top: "res4c_branch2a"
	name: "bn4c_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4c_branch2a"
	top: "res4c_branch2a"
	name: "scale4c_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4c_branch2a"
	top: "res4c_branch2a"
	name: "res4c_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res4c_branch2a"
	top: "res4c_branch2b"
	name: "res4c_branch2b"
	type: "Convolution"
    convolution_param {
        num_output: 64        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res4c_branch2b"
	top: "res4c_branch2b"
	name: "bn4c_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4c_branch2b"
	top: "res4c_branch2b"
	name: "scale4c_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4b"
	bottom: "res4c_branch2b"
	top: "res4c"
	name: "res4c"
	type: "Eltwise"
}

layer {
	bottom: "res4c"
	top: "res4c"
	name: "res4c_relu"
	type: "ReLU"
}

layer {
	bottom: "res4c"
	top: "res4d_branch2a"
	name: "res4d_branch2a"
	type: "Convolution"
    convolution_param {
        num_output: 64        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res4d_branch2a"
	top: "res4d_branch2a"
	name: "bn4d_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4d_branch2a"
	top: "res4d_branch2a"
	name: "scale4d_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4d_branch2a"
	top: "res4d_branch2a"
	name: "res4d_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res4d_branch2a"
	top: "res4d_branch2b"
	name: "res4d_branch2b"
	type: "Convolution"
    convolution_param {
        num_output: 64        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res4d_branch2b"
	top: "res4d_branch2b"
	name: "bn4d_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4d_branch2b"
	top: "res4d_branch2b"
	name: "scale4d_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4c"
	bottom: "res4d_branch2b"
	top: "res4d"
	name: "res4d"
	type: "Eltwise"
}

layer {
	bottom: "res4d"
	top: "res4d"
	name: "res4d_relu"
	type: "ReLU"
}

layer {
	bottom: "res4d"
	top: "res4e_branch2a"
	name: "res4e_branch2a"
	type: "Convolution"
    convolution_param {
        num_output: 64        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res4e_branch2a"
	top: "res4e_branch2a"
	name: "bn4e_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4e_branch2a"
	top: "res4e_branch2a"
	name: "scale4e_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4e_branch2a"
	top: "res4e_branch2a"
	name: "res4e_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res4e_branch2a"
	top: "res4e_branch2b"
	name: "res4e_branch2b"
	type: "Convolution"
    convolution_param {
        num_output: 64        
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
    }   
}

layer {
	bottom: "res4e_branch2b"
	top: "res4e_branch2b"
	name: "bn4e_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4e_branch2b"
	top: "res4e_branch2b"
	name: "scale4e_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4d"
	bottom: "res4e_branch2b"
	top: "res4e"
	name: "res4e"
	type: "Eltwise"
}

layer {
	bottom: "res4e"
	top: "res4e"
	name: "res4e_relu"
	type: "ReLU"
}

layer {
	bottom: "res4e"
	top: "pool5"
	name: "pool5"
	type: "Pooling"
	pooling_param {
		kernel_size: 8
		stride: 1
		pool: AVE
	}
}

layer {
	bottom: "pool5"
	top: "fc10"
	name: "fc10"
	type: "InnerProduct"
	param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc10"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}

layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc10"
  bottom: "label"
  top: "loss"
}